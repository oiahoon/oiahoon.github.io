---
const currentPath = Astro.url.pathname;

const navigation = [
  { name: '首页', href: '/' },
  { name: '关于', href: '/about/' },
  { name: '文章', href: '/tags/' },
  { name: '作品', href: '/portfolio/' },
  { name: '跑步', href: 'https://run2.miaowu.org/', external: true },
];
---

<header class="pointer-events-none relative z-50 flex flex-none flex-col">
  <div class="top-0 z-10 h-16 pt-6">
    <div class="sm:px-8 top-[var(--header-top,theme(spacing.6))] w-full">
      <div class="mx-auto w-full max-w-7xl lg:px-8">
        <div class="relative px-4 sm:px-8 lg:px-12">
          <div class="mx-auto max-w-2xl lg:max-w-5xl">
            <div class="relative flex gap-4">
              <!-- Avatar -->
              <div class="flex flex-1">
                <div class="h-10 w-10 rounded-full bg-white/90 p-0.5 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:ring-white/10">
                  <a 
                    href="/" 
                    class="pointer-events-auto"
                    aria-label="首页"
                  >
                    <img 
                      src="/img/avatar-joey.jpg" 
                      alt="Joey Huang"
                      class="rounded-full bg-zinc-100 object-cover dark:bg-zinc-800 h-9 w-9"
                    />
                  </a>
                </div>
              </div>
              
              <!-- Desktop Navigation -->
              <div class="flex flex-1 justify-end md:justify-center">
                <div class="pointer-events-auto md:hidden">
                  <button 
                    type="button" 
                    class="group flex items-center rounded-full bg-white/90 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20"
                    id="mobile-menu-button"
                  >
                    菜单
                    <svg 
                      viewBox="0 0 8 6" 
                      aria-hidden="true" 
                      class="ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400"
                    >
                      <path 
                        d="M1.75 1.75 4 4.25l2.25-2.5" 
                        fill="none" 
                        stroke-width="1.5" 
                        stroke-linecap="round" 
                        stroke-linejoin="round"
                      />
                    </svg>
                  </button>
                </div>
                
                <nav class="pointer-events-auto hidden md:block">
                  <ul class="flex rounded-full bg-white/90 px-3 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10">
                    {navigation.map((item) => (
                      <li>
                        <a 
                          href={item.href}
                          target={item.external ? '_blank' : undefined}
                          rel={item.external ? 'noopener noreferrer' : undefined}
                          class={`relative block px-3 py-2 transition ${
                            currentPath === item.href 
                              ? 'text-orange-500 dark:text-orange-400' 
                              : 'hover:text-orange-500 dark:hover:text-orange-400'
                          }`}
                        >
                          {item.name}
                          {item.external && (
                            <span class="ml-1 text-xs opacity-60">↗</span>
                          )}
                          {currentPath === item.href && (
                            <span class="absolute inset-x-1 -bottom-px h-px bg-gradient-to-r from-orange-500/0 via-orange-500/40 to-orange-500/0 dark:from-orange-400/0 dark:via-orange-400/40 dark:to-orange-400/0"></span>
                          )}
                        </a>
                      </li>
                    ))}
                  </ul>
                </nav>
              </div>
              
              <!-- Theme Toggle -->
              <div class="flex justify-end md:flex-1">
                <div class="pointer-events-auto">
                  <button 
                    type="button"
                    class="group rounded-full bg-white/90 px-3 py-2 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur transition dark:bg-zinc-800/90 dark:ring-white/10 dark:hover:ring-white/20"
                    id="theme-toggle"
                    aria-label="切换主题"
                  >
                    <svg 
                      viewBox="0 0 24 24" 
                      stroke-width="1.5" 
                      stroke-linecap="round" 
                      stroke-linejoin="round" 
                      aria-hidden="true" 
                      class="h-6 w-6 fill-zinc-100 stroke-zinc-500 transition group-hover:fill-zinc-200 group-hover:stroke-zinc-700 dark:hidden [@media(prefers-color-scheme:dark)]:fill-orange-50 [@media(prefers-color-scheme:dark)]:stroke-orange-500 [@media(prefers-color-scheme:dark)]:group-hover:fill-orange-50 [@media(prefers-color-scheme:dark)]:group-hover:stroke-orange-600"
                    >
                      <path d="M8 12.25A4.25 4.25 0 0 1 12.25 8v0a4.25 4.25 0 0 1 4.25 4.25 4.25 4.25 0 0 1-4.25 4.25v0A4.25 4.25 0 0 1 8 12.25v0Z"></path>
                      <path d="M12.25 3v1.5M21.5 12.25H20M18.791 18.791l-1.06-1.06M18.791 5.709l-1.06 1.06M12.25 20v1.5M4.5 12.25H3M6.77 6.77 5.709 5.709M6.77 17.73l-1.061 1.061" fill="none"></path>
                    </svg>
                    <svg 
                      viewBox="0 0 24 24" 
                      aria-hidden="true" 
                      class="hidden h-6 w-6 fill-zinc-700 stroke-zinc-500 transition dark:block [@media(prefers-color-scheme:dark)]:group-hover:stroke-zinc-400 [@media_not_(prefers-color-scheme:dark)]:fill-orange-400/10 [@media_not_(prefers-color-scheme:dark)]:stroke-orange-500"
                    >
                      <path d="M17.25 16.22a6.937 6.937 0 0 1-9.47-9.47 7.451 7.451 0 1 0 9.47 9.47ZM12.75 7C17 7 17 2.75 17 2.75S17 7 21.25 7C17 7 17 11.25 17 11.25S17 7 12.75 7Z" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Mobile Menu -->
  <div 
    id="mobile-menu" 
    class="fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-white p-8 ring-1 ring-zinc-900/5 opacity-0 scale-95 transition-all duration-150 ease-out pointer-events-none dark:bg-zinc-900 dark:ring-zinc-800"
  >
    <div class="flex flex-row-reverse items-center justify-between">
      <button 
        type="button" 
        class="group flex h-8 w-8 items-center justify-center rounded-full bg-zinc-100 transition dark:bg-zinc-800"
        id="mobile-menu-close"
        aria-label="关闭菜单"
      >
        <svg 
          viewBox="0 0 24 24" 
          aria-hidden="true" 
          class="h-6 w-6 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400"
        >
          <path d="m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5" fill="none" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
        </svg>
      </button>
      <h2 class="text-sm font-medium text-zinc-600 dark:text-zinc-400">导航</h2>
    </div>
    <nav class="mt-6">
      <ul class="-my-2 divide-y divide-zinc-100 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300">
        {navigation.map((item) => (
          <li>
            <a 
              href={item.href}
              target={item.external ? '_blank' : undefined}
              rel={item.external ? 'noopener noreferrer' : undefined}
              class="block py-2 transition hover:text-orange-500 dark:hover:text-orange-400"
            >
              {item.name}
              {item.external && (
                <span class="ml-1 text-xs opacity-60">↗</span>
              )}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
</header>

<script is:inline>
  // Initialize theme immediately to prevent flash
  (function() {
    if (localStorage.getItem('theme') === 'dark' || (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.classList.add('dark');
    }
  })();
</script>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const mobileMenuClose = document.getElementById('mobile-menu-close');
  
  function openMobileMenu() {
    mobileMenu?.classList.remove('opacity-0', 'scale-95', 'pointer-events-none');
    mobileMenu?.classList.add('opacity-100', 'scale-100');
  }
  
  function closeMobileMenu() {
    mobileMenu?.classList.add('opacity-0', 'scale-95', 'pointer-events-none');
    mobileMenu?.classList.remove('opacity-100', 'scale-100');
  }
  
  mobileMenuButton?.addEventListener('click', openMobileMenu);
  mobileMenuClose?.addEventListener('click', closeMobileMenu);
  
  // Close menu when clicking outside
  document.addEventListener('click', (e) => {
    const target = e.target as Element;
    if (!mobileMenu?.contains(target) && !mobileMenuButton?.contains(target)) {
      closeMobileMenu();
    }
  });
  
  // Theme toggle
  const themeToggle = document.getElementById('theme-toggle');
  
  themeToggle?.addEventListener('click', () => {
    document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', document.documentElement.classList.contains('dark') ? 'dark' : 'light');
  });
</script>
