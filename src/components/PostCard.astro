---
export interface Props {
  post: any;
}

const { post } = Astro.props;
const { title, subtitle, author, date, tags, header_img, type = 'article', gallery } = post.data;
const isPhotography = type === 'photography';
const displayImage = header_img || (gallery && gallery[0]?.src);
---

<article class="post-card">
  {displayImage && (
    <div class="card-image">
      <img src={displayImage} alt={title} loading="lazy" />
      {isPhotography && (
        <div class="absolute top-3 right-3 bg-orange-500 text-white px-2 py-1 rounded-full text-xs font-medium flex items-center gap-1">
          <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
          </svg>
          摄影
        </div>
      )}
    </div>
  )}
  
  <div class="card-content">
    <h3 class="card-title">
      <a href={`/posts/${post.slug}/`}>{title}</a>
    </h3>
    
    {subtitle && (
      <p class="card-subtitle">{subtitle}</p>
    )}
    
    <div class="card-meta">
      <span>{author}</span>
      <span>•</span>
      <time datetime={date.toISOString()}>
        {new Date(date).toLocaleDateString('zh-CN')}
      </time>
    </div>
    
    <div class="card-tags">
      {tags.slice(0, 3).map((tag: string) => (
        <a href={`/tags/${tag}/`} class="tag">#{tag}</a>
      ))}
      {tags.length > 3 && (
        <span class="tag-more">+{tags.length - 3}</span>
      )}
    </div>
  </div>
</article>

<style>
  .post-card {
    background: var(--retro-bg-card);
    border: 1px solid #333;
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.2s ease;
  }
  
  .post-card:hover {
    border-color: var(--retro-orange);
    transform: translateY(-4px);
  }
  
  .card-image {
    height: 200px;
    overflow: hidden;
  }
  
  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.2s ease;
  }
  
  .post-card:hover .card-image img {
    transform: scale(1.05);
  }
  
  .card-content {
    padding: 24px;
  }
  
  .card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 8px;
    line-height: 1.3;
  }
  
  .card-title a {
    color: var(--retro-text);
    text-decoration: none;
  }
  
  .card-title a:hover {
    color: var(--retro-orange);
  }
  
  .card-subtitle {
    color: var(--retro-text-muted);
    font-size: 0.95rem;
    line-height: 1.4;
    margin-bottom: 16px;
  }
  
  .card-meta {
    display: flex;
    gap: 8px;
    font-size: 0.85rem;
    color: var(--retro-text-dim);
    margin-bottom: 16px;
  }
  
  .card-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }
  
  .tag {
    font-size: 0.8rem;
    color: var(--retro-orange);
    background: rgba(255, 107, 53, 0.1);
    border: 1px solid rgba(255, 107, 53, 0.3);
    padding: 4px 8px;
    border-radius: 4px;
    text-decoration: none;
    transition: all 0.2s ease;
  }
  
  .tag:hover {
    background: var(--retro-orange);
    color: white;
  }
  
  .tag-more {
    font-size: 0.8rem;
    color: var(--retro-text-dim);
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    padding: 4px 8px;
    border-radius: 4px;
  }
</style>
